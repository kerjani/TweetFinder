plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlinx-serialization'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

android {

    defaultConfig {
        applicationId "com.kernacs.tweetfinder"
        minSdk minimumkSdkVersion
        targetSdk targetAndCompileSdkVersion
        compileSdk targetAndCompileSdkVersion
        versionCode gitCommitCount
        versionName appVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        vectorDrawables {
            useSupportLibrary true
        }

        // default values if it would be missing
        buildConfigField("long", "LIFESPAN_IN_MILLISECONDS", '0')
        buildConfigField("String", "BEARER_TOKEN", "\"\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion composeCompilerVersion
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1,licenses/**}'
            excludes += '**/attach_hotspot_windows.dll'
        }
    }
    namespace 'com.kernacs.tweetfinder'
}

dependencies {
    // version 1.9.0 needs API 33 as target
    implementation "androidx.core:core-ktx:$androidxCoreKtxVersion"

    // Jetpack Compose
    implementation "androidx.compose.ui:ui:$composeVersion"
    implementation "androidx.compose.material:material:$composeVersion"
    implementation "androidx.compose.runtime:runtime-livedata:$composeVersion"
    implementation "androidx.compose.material3:material3:$composeMaterial3Version"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "io.coil-kt:coil-compose:$coilVersion"

    implementation "androidx.compose.ui:ui-tooling-preview:$composeVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleRuntimeKtxVersion"

    // version 1.6.0 needs API 33 as target
    implementation "androidx.activity:activity-compose:$activityComposeVersion"

    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"

    // version 2.x needs refactor
    implementation "io.ktor:ktor-client-android:$ktorVersion"
    implementation "io.ktor:ktor-client-serialization:$ktorVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinxSerializationVersion"
    implementation "io.ktor:ktor-client-logging:$ktorVersion"

    implementation "androidx.room:room-ktx:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    annotationProcessor "androidx.room:room-compiler:$roomVersion"

    implementation platform("com.google.firebase:firebase-bom:$firebaseVersion")
    implementation "com.google.firebase:firebase-analytics-ktx"
    implementation "com.google.firebase:firebase-crashlytics-ktx"

    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$testExtJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutineVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$archTestingVersion"

}